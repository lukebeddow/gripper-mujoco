Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 38.46      0.05     0.05     7620     0.01     0.01  luke::ObjectHandler::extract_forces_faster(mjModel_ const*, mjData_*)
 23.08      0.08     0.03  6064558     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
 15.38      0.10     0.02   304800     0.00     0.00  MjClass::monitor_sensors()
  7.69      0.11     0.01   336893     0.00     0.00  luke::ObjectHandler::Contact::check_involves(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  7.69      0.12     0.01   304800     0.00     0.00  luke::control_gripper(mjModel_ const*, mjData_*, luke::Gripper&)
  7.69      0.13     0.01                             luke::is_settled()
  0.00      0.13     0.00   674669     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
  0.00      0.13     0.00   304823     0.00     0.00  luke::update_all(mjModel_ const*, mjData_*)
  0.00      0.13     0.00   304823     0.00     0.00  luke::update_stepper(mjModel_ const*, mjData_*)
  0.00      0.13     0.00   304800     0.00     0.00  luke::after_step(mjModel_*, mjData_*)
  0.00      0.13     0.00   304800     0.00     0.00  luke::before_step(mjModel_*, mjData_*)
  0.00      0.13     0.00   304800     0.00     0.00  luke::control_base(mjModel_ const*, mjData_*)
  0.00      0.13     0.00   304800     0.00     0.00  luke::is_target_step()
  0.00      0.13     0.00   304800     0.00     0.00  luke::is_target_reached()
  0.00      0.13     0.00   304800     0.00     0.00  luke::step(mjModel_*, mjData_*)
  0.00      0.13     0.00   304800     0.00     0.00  luke::control(mjModel_ const*, mjData_*)
  0.00      0.13     0.00   304800     0.00     0.00  MjClass::step()
  0.00      0.13     0.00   152400     0.00     0.00  luke::rawNum::rawNum(luke::rawNum const&)
  0.00      0.13     0.00   108188     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<float*>(std::move_iterator<float*>)
  0.00      0.13     0.00   102818     0.00     0.00  luke::Gripper::update_z()
  0.00      0.13     0.00   102818     0.00     0.00  luke::Gripper::update_xy()
  0.00      0.13     0.00   101594     0.00     0.00  luke::Gripper::step_to(luke::Gripper, int)
  0.00      0.13     0.00   101594     0.00     0.00  luke::Gripper::step_to(double, double, double, int)
  0.00      0.13     0.00    84975     0.00     0.00  float* std::__niter_base<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >)
  0.00      0.13     0.00    43260     0.00     0.00  float const* std::__niter_base<float const*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
  0.00      0.13     0.00    36576     0.00     0.00  arma::Mat<double>::init_warm(unsigned long long, unsigned long long)
  0.00      0.13     0.00    21630     0.00     0.00  void std::vector<float, std::allocator<float> >::_M_range_insert<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, std::forward_iterator_tag)
  0.00      0.13     0.00    21630     0.00     0.00  __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > std::vector<float, std::allocator<float> >::insert<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, void>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >)
  0.00      0.13     0.00    21630     0.00     0.00  std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
  0.00      0.13     0.00    18288     0.00     0.00  bool arma::glue_polyfit::apply_direct<arma::subview<double>, arma::subview<double> >(arma::Mat<arma::subview<double>::elem_type>&, arma::Base<arma::subview<double>::elem_type, arma::subview<double> > const&, arma::Base<arma::subview<double>::elem_type, arma::subview<double> > const&, unsigned long long)
  0.00      0.13     0.00    18288     0.00     0.00  bool arma::glue_polyfit::apply_noalias<double>(arma::Mat<double>&, arma::Col<double> const&, arma::Col<double> const&, unsigned long long)
  0.00      0.13     0.00    18288     0.00     0.00  luke::read_armadillo_gauge(mjData_ const*, int)
  0.00      0.13     0.00    15450     0.00     0.00  MjType::Sensor::change_sample(luke::SlidingWindow<float>, float)
  0.00      0.13     0.00    12360     0.00     0.00  void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
  0.00      0.13     0.00     7620     0.00     0.00  luke::ObjectHandler::get_object_net_force_faster(mjModel_ const*, mjData_*)
  0.00      0.13     0.00     7620     0.00     0.01  luke::get_object_forces_faster(mjModel_ const*, mjData_*)
  0.00      0.13     0.00     6180     0.00     0.00  MjType::Sensor::raw_sample(luke::SlidingWindow<float>, float)
  0.00      0.13     0.00     6096     0.00     0.00  normalise_between(float, float, float)
  0.00      0.13     0.00     6096     0.00     0.00  luke::get_gauge_data(mjModel_ const*, mjData_*)
  0.00      0.13     0.00     3048     0.00     0.00  luke::get_target_state()
  0.00      0.13     0.00     3048     0.00     0.00  double const* std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>(double const*, double const*, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      0.13     0.00     1626     0.00     0.00  linear_reward(float, float, float, float)
  0.00      0.13     0.00     1545     0.00     0.00  luke::ObjectHandler::get_live_qpos(mjModel_*, mjData_*)
  0.00      0.13     0.00     1545     0.00     0.00  luke::get_object_qpos(mjModel_*, mjData_*)
  0.00      0.13     0.00     1545     0.00     0.00  MjClass::get_observation()
  0.00      0.13     0.00     1524     0.00     0.00  calc_rewards(MjType::EventTrack&, MjType::Settings&)
  0.00      0.13     0.00     1524     0.00     0.08  learning_step(MjClass&)
  0.00      0.13     0.00     1524     0.00     0.00  update_events(MjType::EventTrack&, MjType::Settings&)
  0.00      0.13     0.00     1524     0.00     0.00  luke::get_gripper_target()
  0.00      0.13     0.00     1524     0.00     0.00  MjClass::set_action(int)
  0.00      0.13     0.00     1524     0.00     0.01  MjClass::update_env()
  0.00      0.13     0.00     1524     0.00     0.08  MjClass::action_step()
  0.00      0.13     0.00     1524     0.00     0.00  MjClass::sense_gripper_state()
  0.00      0.13     0.00     1524     0.00     0.00  MjClass::reward()
  0.00      0.13     0.00     1524     0.00     0.00  MjClass::is_done()
  0.00      0.13     0.00     1149     0.00     0.00  luke::move_gripper_target_step(int, int, int)
  0.00      0.13     0.00      414     0.00     0.00  std::vector<float, std::allocator<float> >::_M_fill_assign(unsigned long, float const&)
  0.00      0.13     0.00      375     0.00     0.00  luke::move_base_target_m(double, double, double)
  0.00      0.13     0.00      204     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>)
  0.00      0.13     0.00      150     0.00     0.00  void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.13     0.00      110     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...)
  0.00      0.13     0.00       75     0.00     0.00  luke::Gripper::update()
  0.00      0.13     0.00       60     0.00     0.00  int const* std::__niter_base<int const*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
  0.00      0.13     0.00       44     0.00     0.00  luke::ObjectHandler::reset_live(mjModel_*, mjData_*)
  0.00      0.13     0.00       40     0.00     0.00  luke::ObjectHandler::move_object(mjData_*, int, luke::QPos)
  0.00      0.13     0.00       40     0.00     0.00  luke::ObjectHandler::check_idx(int)
  0.00      0.13     0.00       37     0.00     0.00  void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  0.00      0.13     0.00       32     0.00     0.00  double* const* std::__niter_base<double* const*, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double* const*, std::vector<double*, std::allocator<double*> > >)
  0.00      0.13     0.00       32     0.00     0.00  double const* std::__niter_base<double const*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >)
  0.00      0.13     0.00       30     0.00     0.00  std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&)
  0.00      0.13     0.00       30     0.00     0.00  int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      0.13     0.00       25     0.00     0.00  luke::keyframe(mjModel_*, mjData_*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.13     0.00       25     0.00     0.00  luke::keyframe(mjModel_*, mjData_*, int)
  0.00      0.13     0.00       23     0.00     0.00  luke::get_objects[abi:cxx11]()
  0.00      0.13     0.00       23     0.00     0.00  luke::reset_object(mjModel_*, mjData_*)
  0.00      0.13     0.00       23     0.00     0.00  luke::reset(mjModel_*, mjData_*)
  0.00      0.13     0.00       23     0.00     0.00  MjClass::configure_settings()
  0.00      0.13     0.00       23     0.00     0.00  MjClass::default_goal_event_triggering()
  0.00      0.13     0.00       23     0.00     0.00  MjClass::reset()
  0.00      0.13     0.00       23     0.00     0.00  std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)
  0.00      0.13     0.00       21     0.00     0.00  reset_sim(MjClass&)
  0.00      0.13     0.00       21     0.00     0.00  luke::spawn_object(mjModel_*, mjData_*, int, luke::QPos)
  0.00      0.13     0.00       21     0.00     0.00  luke::ObjectHandler::spawn_object(mjModel_*, mjData_*, int, luke::QPos)
  0.00      0.13     0.00       21     0.00     0.00  luke::ObjectHandler::set_live(mjModel_*, int)
  0.00      0.13     0.00       21     0.00     0.00  MjClass::spawn_object(int)
  0.00      0.13     0.00       21     0.00     0.00  MjClass::spawn_object(int, double, double)
  0.00      0.13     0.00       19     0.00     0.00  luke::ObjectHandler::reset_object(mjModel_*, mjData_*, int)
  0.00      0.13     0.00       19     0.00     0.00  std::vector<float, std::allocator<float> >::_M_default_append(unsigned long)
  0.00      0.13     0.00       16     0.00     0.00  std::vector<double*, std::allocator<double*> >::operator=(std::vector<double*, std::allocator<double*> > const&)
  0.00      0.13     0.00       16     0.00     0.00  std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&)
  0.00      0.13     0.00       16     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* std::__niter_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >)
  0.00      0.13     0.00       16     0.00     0.00  double** std::__niter_base<double**, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >)
  0.00      0.13     0.00       16     0.00     0.00  double* std::__niter_base<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)
  0.00      0.13     0.00       12     0.00     0.00  std::vector<double*, std::allocator<double*> >::_M_default_append(unsigned long)
  0.00      0.13     0.00       12     0.00     0.00  std::vector<double, std::allocator<double> >::_M_default_append(unsigned long)
  0.00      0.13     0.00       12     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double**>(std::move_iterator<double**>)
  0.00      0.13     0.00       12     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double*>(std::move_iterator<double*>)
  0.00      0.13     0.00        8     0.00     0.00  std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
  0.00      0.13     0.00        8     0.00     0.00  std::vector<int, std::allocator<int> >::_M_default_append(unsigned long)
  0.00      0.13     0.00        8     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__niter_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >)
  0.00      0.13     0.00        4     0.00     0.00  std::vector<luke::QPos, std::allocator<luke::QPos> >::_M_default_append(unsigned long)
  0.00      0.13     0.00        2     0.00     0.00  luke::ObjectHandler::settle_objects(mjModel_*, mjData_*)
  0.00      0.13     0.00        2     0.00     0.00  luke::ObjectHandler::remove_collisions(mjModel_*, mjData_*)
  0.00      0.13     0.00        2     0.00     0.00  luke::ObjectHandler::overwrite_keyframe(mjModel_*, mjData_*, int)
  0.00      0.13     0.00        2     0.00     0.00  luke::ObjectHandler::init(mjModel_*, mjData_*)
  0.00      0.13     0.00        2     0.00     0.00  luke::ObjectHandler::resize()
  0.00      0.13     0.00        2     0.00     0.00  luke::configure_qpos(mjModel_*, mjData_*)
  0.00      0.13     0.00        2     0.00     0.00  luke::get_joint_indexes(mjModel_*)
  0.00      0.13     0.00        2     0.00     0.00  luke::get_joint_addresses(mjModel_*)
  0.00      0.13     0.00        2     0.00     0.00  luke::init(mjModel_*, mjData_*)
  0.00      0.13     0.00        2     0.00     0.00  luke::init_J(mjModel_*, mjData_*)
  0.00      0.13     0.00        2     0.00     0.00  MjClass::load_relative(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.13     0.00        2     0.00     0.00  MjClass::init()
  0.00      0.13     0.00        2     0.00     0.00  MjClass::load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      0.13     0.00        2     0.00     0.00  std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool)
  0.00      0.13     0.00        2     0.00     0.00  std::vector<bool, std::allocator<bool> >::resize(unsigned long, bool)
  0.00      0.13     0.00        2     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.13     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4luke13ObjectHandlerC2Ev
  0.00      0.13     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4luke7Gripper9update_xyEv
  0.00      0.13     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4luke9print_vecESt6vectorIbSaIbEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  0.00      0.13     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN6render1mE
  0.00      0.13     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7MjClassC2Ev
  0.00      0.13     0.00        1     0.00     0.00  _GLOBAL__sub_I_num_xml_tasks
  0.00      0.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.13     0.00        1     0.00   120.00  run_test(int, int, int)
  0.00      0.13     0.00        1     0.00     0.00  luke::JointSettings::JointSettings()
  0.00      0.13     0.00        1     0.00     0.00  luke::JointSettings::{unnamed type#1}::JointSettings()
  0.00      0.13     0.00        1     0.00     0.00  luke::ObjectHandler::ObjectHandler()
  0.00      0.13     0.00        1     0.00     0.00  MjClass::tick()
  0.00      0.13     0.00        1     0.00     0.00  MjClass::tock()
  0.00      0.13     0.00        1     0.00     0.00  MjClass::MjClass()
  0.00      0.13     0.00        1     0.00     0.00  MjClass::~MjClass()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 7.69% of 0.13 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     92.3    0.00    0.12                 main [1]
                0.00    0.12       1/1           run_test(int, int, int) [2]
-----------------------------------------------
                0.00    0.12       1/1           main [1]
[2]     92.3    0.00    0.12       1         run_test(int, int, int) [2]
                0.00    0.12    1524/1524        learning_step(MjClass&) [3]
                0.00    0.00       2/2           MjClass::load_relative(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [17]
                0.00    0.00       1/1           MjClass::MjClass() [29]
                0.00    0.00      21/21          reset_sim(MjClass&) [113]
                0.00    0.00       2/110         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [93]
                0.00    0.00       2/674669      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [46]
                0.00    0.00       1/1           MjClass::tick() [153]
                0.00    0.00       1/1           MjClass::tock() [154]
                0.00    0.00       1/1           MjClass::~MjClass() [155]
-----------------------------------------------
                0.00    0.12    1524/1524        run_test(int, int, int) [2]
[3]     92.3    0.00    0.12    1524         learning_step(MjClass&) [3]
                0.00    0.12    1524/1524        MjClass::action_step() [4]
                0.00    0.00    1524/1524        MjClass::set_action(int) [84]
                0.00    0.00    1524/1524        MjClass::reward() [86]
                0.00    0.00    1524/1545        MjClass::get_observation() [80]
                0.00    0.00    1524/1524        MjClass::is_done() [87]
-----------------------------------------------
                0.00    0.12    1524/1524        learning_step(MjClass&) [3]
[4]     92.3    0.00    0.12    1524         MjClass::action_step() [4]
                0.00    0.10  304800/304800      MjClass::step() [5]
                0.00    0.02    1524/1524        MjClass::update_env() [11]
                0.00    0.00  304800/304800      luke::is_target_step() [52]
                0.00    0.00  304800/304800      luke::is_target_reached() [53]
                0.00    0.00    1524/1524        MjClass::sense_gripper_state() [85]
-----------------------------------------------
                0.00    0.10  304800/304800      MjClass::action_step() [4]
[5]     78.5    0.00    0.10  304800         MjClass::step() [5]
                0.02    0.07  304800/304800      MjClass::monitor_sensors() [6]
                0.00    0.01  304800/304800      luke::step(mjModel_*, mjData_*) [13]
                0.00    0.00  304800/304800      luke::before_step(mjModel_*, mjData_*) [50]
                0.00    0.00  304800/304800      luke::after_step(mjModel_*, mjData_*) [49]
-----------------------------------------------
                0.02    0.07  304800/304800      MjClass::step() [5]
[6]     70.8    0.02    0.07  304800         MjClass::monitor_sensors() [6]
                0.00    0.07    6096/7620        luke::get_object_forces_faster(mjModel_ const*, mjData_*) [8]
                0.00    0.00  152400/152400      luke::rawNum::rawNum(luke::rawNum const&) [54]
                0.00    0.00    6096/6096        luke::get_gauge_data(mjModel_ const*, mjData_*) [74]
-----------------------------------------------
                0.05    0.04    7620/7620        luke::get_object_forces_faster(mjModel_ const*, mjData_*) [8]
[7]     69.2    0.05    0.04    7620         luke::ObjectHandler::extract_forces_faster(mjModel_ const*, mjData_*) [7]
                0.01    0.03  336893/336893      luke::ObjectHandler::Contact::check_involves(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [9]
                0.00    0.00  673786/6064558     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [10]
                0.00    0.00  336893/674669      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [46]
                0.00    0.00    7620/7620        luke::ObjectHandler::get_object_net_force_faster(mjModel_ const*, mjData_*) [71]
-----------------------------------------------
                0.00    0.02    1524/7620        MjClass::update_env() [11]
                0.00    0.07    6096/7620        MjClass::monitor_sensors() [6]
[8]     69.2    0.00    0.09    7620         luke::get_object_forces_faster(mjModel_ const*, mjData_*) [8]
                0.05    0.04    7620/7620        luke::ObjectHandler::extract_forces_faster(mjModel_ const*, mjData_*) [7]
-----------------------------------------------
                0.01    0.03  336893/336893      luke::ObjectHandler::extract_forces_faster(mjModel_ const*, mjData_*) [7]
[9]     28.2    0.01    0.03  336893         luke::ObjectHandler::Contact::check_involves(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [9]
                0.03    0.00 5390288/6064558     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [10]
                0.00    0.00  336893/674669      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [46]
-----------------------------------------------
                0.00    0.00       2/6064558     luke::JointSettings::JointSettings() [26]
                0.00    0.00       3/6064558     MjClass::MjClass() [29]
                0.00    0.00      15/6064558     luke::JointSettings::{unnamed type#1}::JointSettings() [28]
                0.00    0.00      34/6064558     luke::init_J(mjModel_*, mjData_*) [20]
                0.00    0.00      40/6064558     luke::ObjectHandler::init(mjModel_*, mjData_*) [22]
                0.00    0.00     104/6064558     luke::ObjectHandler::remove_collisions(mjModel_*, mjData_*) [23]
                0.00    0.00     286/6064558     luke::get_joint_indexes(mjModel_*) [21]
                0.00    0.00  673786/6064558     luke::ObjectHandler::extract_forces_faster(mjModel_ const*, mjData_*) [7]
                0.03    0.00 5390288/6064558     luke::ObjectHandler::Contact::check_involves(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [9]
[10]    23.1    0.03    0.00 6064558         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [10]
-----------------------------------------------
                0.00    0.02    1524/1524        MjClass::action_step() [4]
[11]    13.8    0.00    0.02    1524         MjClass::update_env() [11]
                0.00    0.02    1524/7620        luke::get_object_forces_faster(mjModel_ const*, mjData_*) [8]
                0.00    0.00    3048/3048        double const* std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>(double const*, double const*, __gnu_cxx::__ops::_Iter_less_iter) [76]
                0.00    0.00    1524/1545        luke::get_object_qpos(mjModel_*, mjData_*) [79]
                0.00    0.00    1524/1524        luke::get_gripper_target() [83]
                0.00    0.00    1524/1524        update_events(MjType::EventTrack&, MjType::Settings&) [82]
-----------------------------------------------
                0.01    0.00  304800/304800      luke::control(mjModel_ const*, mjData_*) [14]
[12]     7.7    0.01    0.00  304800         luke::control_gripper(mjModel_ const*, mjData_*, luke::Gripper&) [12]
-----------------------------------------------
                0.00    0.01  304800/304800      MjClass::step() [5]
[13]     7.7    0.00    0.01  304800         luke::step(mjModel_*, mjData_*) [13]
                0.00    0.01  304800/304800      luke::control(mjModel_ const*, mjData_*) [14]
-----------------------------------------------
                0.00    0.01  304800/304800      luke::step(mjModel_*, mjData_*) [13]
[14]     7.7    0.00    0.01  304800         luke::control(mjModel_ const*, mjData_*) [14]
                0.01    0.00  304800/304800      luke::control_gripper(mjModel_ const*, mjData_*, luke::Gripper&) [12]
                0.00    0.00  304800/304800      luke::control_base(mjModel_ const*, mjData_*) [51]
-----------------------------------------------
                                                 <spontaneous>
[15]     7.7    0.01    0.00                 luke::is_settled() [15]
-----------------------------------------------
                0.00    0.00       2/2           MjClass::init() [18]
[16]     0.0    0.00    0.00       2         luke::init(mjModel_*, mjData_*) [16]
                0.00    0.00       2/2           luke::init_J(mjModel_*, mjData_*) [20]
                0.00    0.00       2/2           luke::ObjectHandler::init(mjModel_*, mjData_*) [22]
                0.00    0.00       2/674669      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [46]
                0.00    0.00       2/25          luke::keyframe(mjModel_*, mjData_*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [104]
-----------------------------------------------
                0.00    0.00       2/2           run_test(int, int, int) [2]
[17]     0.0    0.00    0.00       2         MjClass::load_relative(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [17]
                0.00    0.00       2/2           MjClass::load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [19]
                0.00    0.00       2/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [141]
-----------------------------------------------
                0.00    0.00       2/2           MjClass::load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [19]
[18]     0.0    0.00    0.00       2         MjClass::init() [18]
                0.00    0.00       2/2           luke::init(mjModel_*, mjData_*) [16]
                0.00    0.00       2/23          luke::get_objects[abi:cxx11]() [106]
                0.00    0.00       2/23          MjClass::reset() [111]
-----------------------------------------------
                0.00    0.00       2/2           MjClass::load_relative(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [17]
[19]     0.0    0.00    0.00       2         MjClass::load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [19]
                0.00    0.00       2/2           MjClass::init() [18]
-----------------------------------------------
                0.00    0.00       2/2           luke::init(mjModel_*, mjData_*) [16]
[20]     0.0    0.00    0.00       2         luke::init_J(mjModel_*, mjData_*) [20]
                0.00    0.00       2/2           luke::get_joint_indexes(mjModel_*) [21]
                0.00    0.00      34/6064558     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [10]
                0.00    0.00      30/674669      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [46]
                0.00    0.00      30/30          std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [102]
                0.00    0.00      16/16          std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [122]
                0.00    0.00      16/16          std::vector<double*, std::allocator<double*> >::operator=(std::vector<double*, std::allocator<double*> > const&) [121]
                0.00    0.00       8/8           std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) [130]
                0.00    0.00       2/2           luke::get_joint_addresses(mjModel_*) [138]
                0.00    0.00       2/2           luke::configure_qpos(mjModel_*, mjData_*) [137]
-----------------------------------------------
                0.00    0.00       2/2           luke::init_J(mjModel_*, mjData_*) [20]
[21]     0.0    0.00    0.00       2         luke::get_joint_indexes(mjModel_*) [21]
                0.00    0.00     286/6064558     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [10]
                0.00    0.00     132/674669      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [46]
                0.00    0.00     108/110         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [93]
                0.00    0.00      15/37          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [99]
                0.00    0.00       6/150         void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [92]
-----------------------------------------------
                0.00    0.00       2/2           luke::init(mjModel_*, mjData_*) [16]
[22]     0.0    0.00    0.00       2         luke::ObjectHandler::init(mjModel_*, mjData_*) [22]
                0.00    0.00       2/2           luke::ObjectHandler::remove_collisions(mjModel_*, mjData_*) [23]
                0.00    0.00      40/6064558     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [10]
                0.00    0.00      74/674669      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [46]
                0.00    0.00       6/150         void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [92]
                0.00    0.00       2/2           luke::ObjectHandler::settle_objects(mjModel_*, mjData_*) [134]
                0.00    0.00       2/2           luke::ObjectHandler::resize() [136]
                0.00    0.00       2/2           luke::ObjectHandler::overwrite_keyframe(mjModel_*, mjData_*, int) [135]
-----------------------------------------------
                0.00    0.00       2/2           luke::ObjectHandler::init(mjModel_*, mjData_*) [22]
[23]     0.0    0.00    0.00       2         luke::ObjectHandler::remove_collisions(mjModel_*, mjData_*) [23]
                0.00    0.00     104/6064558     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [10]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [27]
[24]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4luke9print_vecESt6vectorIbSaIbEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [24]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [25]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4luke9print_vecESt6vectorIbSaIbEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [24]
[25]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [25]
                0.00    0.00       1/1           luke::JointSettings::JointSettings() [26]
                0.00    0.00       5/75          luke::Gripper::update() [94]
                0.00    0.00       1/1           luke::ObjectHandler::ObjectHandler() [152]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [25]
[26]     0.0    0.00    0.00       1         luke::JointSettings::JointSettings() [26]
                0.00    0.00       1/1           luke::JointSettings::{unnamed type#1}::JointSettings() [28]
                0.00    0.00       2/6064558     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [10]
-----------------------------------------------
                                                 <spontaneous>
[27]     0.0    0.00    0.00                 __libc_csu_init [27]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4luke9print_vecESt6vectorIbSaIbEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [24]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4luke7Gripper9update_xyEv [143]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4luke13ObjectHandlerC2Ev [142]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6render1mE [144]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7MjClassC2Ev [145]
                0.00    0.00       1/1           _GLOBAL__sub_I_num_xml_tasks [146]
-----------------------------------------------
                0.00    0.00       1/1           luke::JointSettings::JointSettings() [26]
[28]     0.0    0.00    0.00       1         luke::JointSettings::{unnamed type#1}::JointSettings() [28]
                0.00    0.00      15/6064558     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [10]
                0.00    0.00      15/674669      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [46]
-----------------------------------------------
                0.00    0.00       1/1           run_test(int, int, int) [2]
[29]     0.0    0.00    0.00       1         MjClass::MjClass() [29]
                0.00    0.00       3/6064558     void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [10]
                0.00    0.00      19/19          std::vector<float, std::allocator<float> >::_M_default_append(unsigned long) [120]
                0.00    0.00       1/75          luke::Gripper::update() [94]
-----------------------------------------------
                0.00    0.00       2/674669      run_test(int, int, int) [2]
                0.00    0.00       2/674669      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [141]
                0.00    0.00       2/674669      luke::init(mjModel_*, mjData_*) [16]
                0.00    0.00      15/674669      luke::JointSettings::{unnamed type#1}::JointSettings() [28]
                0.00    0.00      21/674669      luke::ObjectHandler::set_live(mjModel_*, int) [116]
                0.00    0.00      23/674669      luke::reset(mjModel_*, mjData_*) [108]
                0.00    0.00      30/674669      luke::init_J(mjModel_*, mjData_*) [20]
                0.00    0.00      74/674669      luke::ObjectHandler::init(mjModel_*, mjData_*) [22]
                0.00    0.00     110/674669      std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [93]
                0.00    0.00     132/674669      luke::get_joint_indexes(mjModel_*) [21]
                0.00    0.00     150/674669      void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [92]
                0.00    0.00     322/674669      luke::get_objects[abi:cxx11]() [106]
                0.00    0.00  336893/674669      luke::ObjectHandler::extract_forces_faster(mjModel_ const*, mjData_*) [7]
                0.00    0.00  336893/674669      luke::ObjectHandler::Contact::check_involves(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [9]
[46]     0.0    0.00    0.00  674669         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [46]
-----------------------------------------------
                0.00    0.00      23/304823      luke::reset(mjModel_*, mjData_*) [108]
                0.00    0.00  304800/304823      luke::after_step(mjModel_*, mjData_*) [49]
[47]     0.0    0.00    0.00  304823         luke::update_all(mjModel_ const*, mjData_*) [47]
                0.00    0.00  304823/304823      luke::update_stepper(mjModel_ const*, mjData_*) [48]
-----------------------------------------------
                0.00    0.00  304823/304823      luke::update_all(mjModel_ const*, mjData_*) [47]
[48]     0.0    0.00    0.00  304823         luke::update_stepper(mjModel_ const*, mjData_*) [48]
                0.00    0.00  101594/101594      luke::Gripper::step_to(luke::Gripper, int) [58]
-----------------------------------------------
                0.00    0.00  304800/304800      MjClass::step() [5]
[49]     0.0    0.00    0.00  304800         luke::after_step(mjModel_*, mjData_*) [49]
                0.00    0.00  304800/304823      luke::update_all(mjModel_ const*, mjData_*) [47]
-----------------------------------------------
                0.00    0.00  304800/304800      MjClass::step() [5]
[50]     0.0    0.00    0.00  304800         luke::before_step(mjModel_*, mjData_*) [50]
-----------------------------------------------
                0.00    0.00  304800/304800      luke::control(mjModel_ const*, mjData_*) [14]
[51]     0.0    0.00    0.00  304800         luke::control_base(mjModel_ const*, mjData_*) [51]
-----------------------------------------------
                0.00    0.00  304800/304800      MjClass::action_step() [4]
[52]     0.0    0.00    0.00  304800         luke::is_target_step() [52]
-----------------------------------------------
                0.00    0.00  304800/304800      MjClass::action_step() [4]
[53]     0.0    0.00    0.00  304800         luke::is_target_reached() [53]
-----------------------------------------------
                0.00    0.00  152400/152400      MjClass::monitor_sensors() [6]
[54]     0.0    0.00    0.00  152400         luke::rawNum::rawNum(luke::rawNum const&) [54]
-----------------------------------------------
                0.00    0.00      38/108188      std::vector<float, std::allocator<float> >::_M_default_append(unsigned long) [120]
                0.00    0.00   49440/108188      void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&) [70]
                0.00    0.00   58710/108188      void std::vector<float, std::allocator<float> >::_M_range_insert<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, std::forward_iterator_tag) [63]
[55]     0.0    0.00    0.00  108188         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<float*>(std::move_iterator<float*>) [55]
-----------------------------------------------
                0.00    0.00      75/102818      luke::Gripper::update() [94]
                0.00    0.00    1149/102818      luke::move_gripper_target_step(int, int, int) [88]
                0.00    0.00  101594/102818      luke::Gripper::step_to(double, double, double, int) [59]
[56]     0.0    0.00    0.00  102818         luke::Gripper::update_z() [56]
-----------------------------------------------
                0.00    0.00      75/102818      luke::Gripper::update() [94]
                0.00    0.00    1149/102818      luke::move_gripper_target_step(int, int, int) [88]
                0.00    0.00  101594/102818      luke::Gripper::step_to(double, double, double, int) [59]
[57]     0.0    0.00    0.00  102818         luke::Gripper::update_xy() [57]
-----------------------------------------------
                0.00    0.00  101594/101594      luke::update_stepper(mjModel_ const*, mjData_*) [48]
[58]     0.0    0.00    0.00  101594         luke::Gripper::step_to(luke::Gripper, int) [58]
                0.00    0.00  101594/101594      luke::Gripper::step_to(double, double, double, int) [59]
-----------------------------------------------
                0.00    0.00  101594/101594      luke::Gripper::step_to(luke::Gripper, int) [58]
[59]     0.0    0.00    0.00  101594         luke::Gripper::step_to(double, double, double, int) [59]
                0.00    0.00  101594/102818      luke::Gripper::update_xy() [57]
                0.00    0.00  101594/102818      luke::Gripper::update_z() [56]
-----------------------------------------------
                0.00    0.00   84975/84975       void std::vector<float, std::allocator<float> >::_M_range_insert<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, std::forward_iterator_tag) [63]
[60]     0.0    0.00    0.00   84975         float* std::__niter_base<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >) [60]
-----------------------------------------------
                0.00    0.00   43260/43260       std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&) [65]
[61]     0.0    0.00    0.00   43260         float const* std::__niter_base<float const*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >) [61]
-----------------------------------------------
                0.00    0.00   36576/36576       bool arma::glue_polyfit::apply_noalias<double>(arma::Mat<double>&, arma::Col<double> const&, arma::Col<double> const&, unsigned long long) [67]
[62]     0.0    0.00    0.00   36576         arma::Mat<double>::init_warm(unsigned long long, unsigned long long) [62]
-----------------------------------------------
                0.00    0.00   21630/21630       __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > std::vector<float, std::allocator<float> >::insert<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, void>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >) [64]
[63]     0.0    0.00    0.00   21630         void std::vector<float, std::allocator<float> >::_M_range_insert<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, std::forward_iterator_tag) [63]
                0.00    0.00   84975/84975       float* std::__niter_base<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >) [60]
                0.00    0.00   58710/108188      decltype (__miter_base(({parm#1}.base)())) std::__miter_base<float*>(std::move_iterator<float*>) [55]
-----------------------------------------------
                0.00    0.00   21630/21630       MjClass::get_observation() [80]
[64]     0.0    0.00    0.00   21630         __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > std::vector<float, std::allocator<float> >::insert<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, void>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >) [64]
                0.00    0.00   21630/21630       void std::vector<float, std::allocator<float> >::_M_range_insert<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, std::forward_iterator_tag) [63]
-----------------------------------------------
                0.00    0.00   21630/21630       MjClass::get_observation() [80]
[65]     0.0    0.00    0.00   21630         std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&) [65]
                0.00    0.00   43260/43260       float const* std::__niter_base<float const*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >) [61]
-----------------------------------------------
                0.00    0.00   18288/18288       luke::read_armadillo_gauge(mjData_ const*, int) [68]
[66]     0.0    0.00    0.00   18288         bool arma::glue_polyfit::apply_direct<arma::subview<double>, arma::subview<double> >(arma::Mat<arma::subview<double>::elem_type>&, arma::Base<arma::subview<double>::elem_type, arma::subview<double> > const&, arma::Base<arma::subview<double>::elem_type, arma::subview<double> > const&, unsigned long long) [66]
                0.00    0.00   18288/18288       bool arma::glue_polyfit::apply_noalias<double>(arma::Mat<double>&, arma::Col<double> const&, arma::Col<double> const&, unsigned long long) [67]
-----------------------------------------------
                0.00    0.00   18288/18288       bool arma::glue_polyfit::apply_direct<arma::subview<double>, arma::subview<double> >(arma::Mat<arma::subview<double>::elem_type>&, arma::Base<arma::subview<double>::elem_type, arma::subview<double> > const&, arma::Base<arma::subview<double>::elem_type, arma::subview<double> > const&, unsigned long long) [66]
[67]     0.0    0.00    0.00   18288         bool arma::glue_polyfit::apply_noalias<double>(arma::Mat<double>&, arma::Col<double> const&, arma::Col<double> const&, unsigned long long) [67]
                0.00    0.00   36576/36576       arma::Mat<double>::init_warm(unsigned long long, unsigned long long) [62]
-----------------------------------------------
                0.00    0.00   18288/18288       luke::get_gauge_data(mjModel_ const*, mjData_*) [74]
[68]     0.0    0.00    0.00   18288         luke::read_armadillo_gauge(mjData_ const*, int) [68]
                0.00    0.00   18288/18288       bool arma::glue_polyfit::apply_direct<arma::subview<double>, arma::subview<double> >(arma::Mat<arma::subview<double>::elem_type>&, arma::Base<arma::subview<double>::elem_type, arma::subview<double> > const&, arma::Base<arma::subview<double>::elem_type, arma::subview<double> > const&, unsigned long long) [66]
-----------------------------------------------
                0.00    0.00   15450/15450       MjClass::get_observation() [80]
[69]     0.0    0.00    0.00   15450         MjType::Sensor::change_sample(luke::SlidingWindow<float>, float) [69]
-----------------------------------------------
                0.00    0.00   12360/12360       MjType::Sensor::raw_sample(luke::SlidingWindow<float>, float) [72]
[70]     0.0    0.00    0.00   12360         void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&) [70]
                0.00    0.00   49440/108188      decltype (__miter_base(({parm#1}.base)())) std::__miter_base<float*>(std::move_iterator<float*>) [55]
-----------------------------------------------
                0.00    0.00    7620/7620        luke::ObjectHandler::extract_forces_faster(mjModel_ const*, mjData_*) [7]
[71]     0.0    0.00    0.00    7620         luke::ObjectHandler::get_object_net_force_faster(mjModel_ const*, mjData_*) [71]
-----------------------------------------------
                0.00    0.00    6180/6180        MjClass::get_observation() [80]
[72]     0.0    0.00    0.00    6180         MjType::Sensor::raw_sample(luke::SlidingWindow<float>, float) [72]
                0.00    0.00   12360/12360       void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&) [70]
-----------------------------------------------
                0.00    0.00    6096/6096        MjClass::sense_gripper_state() [85]
[73]     0.0    0.00    0.00    6096         normalise_between(float, float, float) [73]
-----------------------------------------------
                0.00    0.00    6096/6096        MjClass::monitor_sensors() [6]
[74]     0.0    0.00    0.00    6096         luke::get_gauge_data(mjModel_ const*, mjData_*) [74]
                0.00    0.00   18288/18288       luke::read_armadillo_gauge(mjData_ const*, int) [68]
-----------------------------------------------
                0.00    0.00    1524/3048        MjClass::set_action(int) [84]
                0.00    0.00    1524/3048        MjClass::sense_gripper_state() [85]
[75]     0.0    0.00    0.00    3048         luke::get_target_state() [75]
-----------------------------------------------
                0.00    0.00    3048/3048        MjClass::update_env() [11]
[76]     0.0    0.00    0.00    3048         double const* std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>(double const*, double const*, __gnu_cxx::__ops::_Iter_less_iter) [76]
-----------------------------------------------
                0.00    0.00    1626/1626        calc_rewards(MjType::EventTrack&, MjType::Settings&) [81]
[77]     0.0    0.00    0.00    1626         linear_reward(float, float, float, float) [77]
-----------------------------------------------
                0.00    0.00    1545/1545        luke::get_object_qpos(mjModel_*, mjData_*) [79]
[78]     0.0    0.00    0.00    1545         luke::ObjectHandler::get_live_qpos(mjModel_*, mjData_*) [78]
-----------------------------------------------
                0.00    0.00      21/1545        MjClass::spawn_object(int, double, double) [118]
                0.00    0.00    1524/1545        MjClass::update_env() [11]
[79]     0.0    0.00    0.00    1545         luke::get_object_qpos(mjModel_*, mjData_*) [79]
                0.00    0.00    1545/1545        luke::ObjectHandler::get_live_qpos(mjModel_*, mjData_*) [78]
-----------------------------------------------
                0.00    0.00      21/1545        reset_sim(MjClass&) [113]
                0.00    0.00    1524/1545        learning_step(MjClass&) [3]
[80]     0.0    0.00    0.00    1545         MjClass::get_observation() [80]
                0.00    0.00   21630/21630       std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&) [65]
                0.00    0.00   21630/21630       __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > std::vector<float, std::allocator<float> >::insert<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, void>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >) [64]
                0.00    0.00   15450/15450       MjType::Sensor::change_sample(luke::SlidingWindow<float>, float) [69]
                0.00    0.00    6180/6180        MjType::Sensor::raw_sample(luke::SlidingWindow<float>, float) [72]
-----------------------------------------------
                0.00    0.00    1524/1524        MjClass::reward() [86]
[81]     0.0    0.00    0.00    1524         calc_rewards(MjType::EventTrack&, MjType::Settings&) [81]
                0.00    0.00    1626/1626        linear_reward(float, float, float, float) [77]
-----------------------------------------------
                0.00    0.00    1524/1524        MjClass::update_env() [11]
[82]     0.0    0.00    0.00    1524         update_events(MjType::EventTrack&, MjType::Settings&) [82]
-----------------------------------------------
                0.00    0.00    1524/1524        MjClass::update_env() [11]
[83]     0.0    0.00    0.00    1524         luke::get_gripper_target() [83]
-----------------------------------------------
                0.00    0.00    1524/1524        learning_step(MjClass&) [3]
[84]     0.0    0.00    0.00    1524         MjClass::set_action(int) [84]
                0.00    0.00    1524/3048        luke::get_target_state() [75]
                0.00    0.00    1149/1149        luke::move_gripper_target_step(int, int, int) [88]
                0.00    0.00     375/375         luke::move_base_target_m(double, double, double) [90]
-----------------------------------------------
                0.00    0.00    1524/1524        MjClass::action_step() [4]
[85]     0.0    0.00    0.00    1524         MjClass::sense_gripper_state() [85]
                0.00    0.00    6096/6096        normalise_between(float, float, float) [73]
                0.00    0.00    1524/3048        luke::get_target_state() [75]
-----------------------------------------------
                0.00    0.00    1524/1524        learning_step(MjClass&) [3]
[86]     0.0    0.00    0.00    1524         MjClass::reward() [86]
                0.00    0.00    1524/1524        calc_rewards(MjType::EventTrack&, MjType::Settings&) [81]
-----------------------------------------------
                0.00    0.00    1524/1524        learning_step(MjClass&) [3]
[87]     0.0    0.00    0.00    1524         MjClass::is_done() [87]
-----------------------------------------------
                0.00    0.00    1149/1149        MjClass::set_action(int) [84]
[88]     0.0    0.00    0.00    1149         luke::move_gripper_target_step(int, int, int) [88]
                0.00    0.00    1149/102818      luke::Gripper::update_xy() [57]
                0.00    0.00    1149/102818      luke::Gripper::update_z() [56]
-----------------------------------------------
                0.00    0.00     414/414         MjClass::reset() [111]
[89]     0.0    0.00    0.00     414         std::vector<float, std::allocator<float> >::_M_fill_assign(unsigned long, float const&) [89]
-----------------------------------------------
                0.00    0.00     375/375         MjClass::set_action(int) [84]
[90]     0.0    0.00    0.00     375         luke::move_base_target_m(double, double, double) [90]
-----------------------------------------------
                0.00    0.00       8/204         std::vector<int, std::allocator<int> >::_M_default_append(unsigned long) [131]
                0.00    0.00      48/204         std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&) [112]
                0.00    0.00     148/204         void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [99]
[91]     0.0    0.00    0.00     204         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [91]
-----------------------------------------------
                0.00    0.00       6/150         luke::ObjectHandler::init(mjModel_*, mjData_*) [22]
                0.00    0.00       6/150         luke::get_joint_indexes(mjModel_*) [21]
                0.00    0.00     138/150         luke::get_objects[abi:cxx11]() [106]
[92]     0.0    0.00    0.00     150         void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [92]
                0.00    0.00     150/674669      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [46]
-----------------------------------------------
                0.00    0.00       2/110         run_test(int, int, int) [2]
                0.00    0.00     108/110         luke::get_joint_indexes(mjModel_*) [21]
[93]     0.0    0.00    0.00     110         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [93]
                0.00    0.00     110/674669      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [46]
-----------------------------------------------
                0.00    0.00       1/75          MjClass::MjClass() [29]
                0.00    0.00       5/75          __static_initialization_and_destruction_0(int, int) [25]
                0.00    0.00      23/75          MjClass::reset() [111]
                0.00    0.00      46/75          luke::reset(mjModel_*, mjData_*) [108]
[94]     0.0    0.00    0.00      75         luke::Gripper::update() [94]
                0.00    0.00      75/102818      luke::Gripper::update_xy() [57]
                0.00    0.00      75/102818      luke::Gripper::update_z() [56]
-----------------------------------------------
                0.00    0.00      60/60          std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [102]
[95]     0.0    0.00    0.00      60         int const* std::__niter_base<int const*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [95]
-----------------------------------------------
                0.00    0.00      21/44          luke::ObjectHandler::spawn_object(mjModel_*, mjData_*, int, luke::QPos) [115]
                0.00    0.00      23/44          luke::reset_object(mjModel_*, mjData_*) [107]
[96]     0.0    0.00    0.00      44         luke::ObjectHandler::reset_live(mjModel_*, mjData_*) [96]
                0.00    0.00      19/19          luke::ObjectHandler::reset_object(mjModel_*, mjData_*, int) [119]
-----------------------------------------------
                0.00    0.00      19/40          luke::ObjectHandler::reset_object(mjModel_*, mjData_*, int) [119]
                0.00    0.00      21/40          luke::ObjectHandler::spawn_object(mjModel_*, mjData_*, int, luke::QPos) [115]
[97]     0.0    0.00    0.00      40         luke::ObjectHandler::move_object(mjData_*, int, luke::QPos) [97]
-----------------------------------------------
                0.00    0.00      19/40          luke::ObjectHandler::reset_object(mjModel_*, mjData_*, int) [119]
                0.00    0.00      21/40          luke::ObjectHandler::spawn_object(mjModel_*, mjData_*, int, luke::QPos) [115]
[98]     0.0    0.00    0.00      40         luke::ObjectHandler::check_idx(int) [98]
-----------------------------------------------
                0.00    0.00      15/37          luke::get_joint_indexes(mjModel_*) [21]
                0.00    0.00      22/37          luke::get_joint_addresses(mjModel_*) [138]
[99]     0.0    0.00    0.00      37         void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [99]
                0.00    0.00     148/204         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [91]
-----------------------------------------------
                0.00    0.00      32/32          std::vector<double*, std::allocator<double*> >::operator=(std::vector<double*, std::allocator<double*> > const&) [121]
[100]    0.0    0.00    0.00      32         double* const* std::__niter_base<double* const*, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double* const*, std::vector<double*, std::allocator<double*> > >) [100]
-----------------------------------------------
                0.00    0.00      32/32          std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [122]
[101]    0.0    0.00    0.00      32         double const* std::__niter_base<double const*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [101]
-----------------------------------------------
                0.00    0.00      30/30          luke::init_J(mjModel_*, mjData_*) [20]
[102]    0.0    0.00    0.00      30         std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [102]
                0.00    0.00      60/60          int const* std::__niter_base<int const*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [95]
                0.00    0.00      30/30          int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [103]
-----------------------------------------------
                0.00    0.00      30/30          std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&) [102]
[103]    0.0    0.00    0.00      30         int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [103]
-----------------------------------------------
                0.00    0.00       2/25          luke::init(mjModel_*, mjData_*) [16]
                0.00    0.00      23/25          luke::reset(mjModel_*, mjData_*) [108]
[104]    0.0    0.00    0.00      25         luke::keyframe(mjModel_*, mjData_*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [104]
                0.00    0.00      25/25          luke::keyframe(mjModel_*, mjData_*, int) [105]
-----------------------------------------------
                0.00    0.00      25/25          luke::keyframe(mjModel_*, mjData_*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [104]
[105]    0.0    0.00    0.00      25         luke::keyframe(mjModel_*, mjData_*, int) [105]
-----------------------------------------------
                0.00    0.00       2/23          MjClass::init() [18]
                0.00    0.00      21/23          reset_sim(MjClass&) [113]
[106]    0.0    0.00    0.00      23         luke::get_objects[abi:cxx11]() [106]
                0.00    0.00     322/674669      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [46]
                0.00    0.00     138/150         void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [92]
-----------------------------------------------
                0.00    0.00      23/23          luke::reset(mjModel_*, mjData_*) [108]
[107]    0.0    0.00    0.00      23         luke::reset_object(mjModel_*, mjData_*) [107]
                0.00    0.00      23/44          luke::ObjectHandler::reset_live(mjModel_*, mjData_*) [96]
-----------------------------------------------
                0.00    0.00      23/23          MjClass::reset() [111]
[108]    0.0    0.00    0.00      23         luke::reset(mjModel_*, mjData_*) [108]
                0.00    0.00      46/75          luke::Gripper::update() [94]
                0.00    0.00      23/674669      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [46]
                0.00    0.00      23/25          luke::keyframe(mjModel_*, mjData_*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [104]
                0.00    0.00      23/23          luke::reset_object(mjModel_*, mjData_*) [107]
                0.00    0.00      23/304823      luke::update_all(mjModel_ const*, mjData_*) [47]
-----------------------------------------------
                0.00    0.00      23/23          MjClass::reset() [111]
[109]    0.0    0.00    0.00      23         MjClass::configure_settings() [109]
                0.00    0.00      23/23          std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&) [112]
                0.00    0.00      23/23          MjClass::default_goal_event_triggering() [110]
-----------------------------------------------
                0.00    0.00      23/23          MjClass::configure_settings() [109]
[110]    0.0    0.00    0.00      23         MjClass::default_goal_event_triggering() [110]
-----------------------------------------------
                0.00    0.00       2/23          MjClass::init() [18]
                0.00    0.00      21/23          reset_sim(MjClass&) [113]
[111]    0.0    0.00    0.00      23         MjClass::reset() [111]
                0.00    0.00     414/414         std::vector<float, std::allocator<float> >::_M_fill_assign(unsigned long, float const&) [89]
                0.00    0.00      23/23          luke::reset(mjModel_*, mjData_*) [108]
                0.00    0.00      23/75          luke::Gripper::update() [94]
                0.00    0.00      23/23          MjClass::configure_settings() [109]
-----------------------------------------------
                0.00    0.00      23/23          MjClass::configure_settings() [109]
[112]    0.0    0.00    0.00      23         std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&) [112]
                0.00    0.00      48/204         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [91]
-----------------------------------------------
                0.00    0.00      21/21          run_test(int, int, int) [2]
[113]    0.0    0.00    0.00      21         reset_sim(MjClass&) [113]
                0.00    0.00      21/23          MjClass::reset() [111]
                0.00    0.00      21/23          luke::get_objects[abi:cxx11]() [106]
                0.00    0.00      21/21          MjClass::spawn_object(int) [117]
                0.00    0.00      21/1545        MjClass::get_observation() [80]
-----------------------------------------------
                0.00    0.00      21/21          MjClass::spawn_object(int, double, double) [118]
[114]    0.0    0.00    0.00      21         luke::spawn_object(mjModel_*, mjData_*, int, luke::QPos) [114]
                0.00    0.00      21/21          luke::ObjectHandler::spawn_object(mjModel_*, mjData_*, int, luke::QPos) [115]
-----------------------------------------------
                0.00    0.00      21/21          luke::spawn_object(mjModel_*, mjData_*, int, luke::QPos) [114]
[115]    0.0    0.00    0.00      21         luke::ObjectHandler::spawn_object(mjModel_*, mjData_*, int, luke::QPos) [115]
                0.00    0.00      21/40          luke::ObjectHandler::check_idx(int) [98]
                0.00    0.00      21/44          luke::ObjectHandler::reset_live(mjModel_*, mjData_*) [96]
                0.00    0.00      21/40          luke::ObjectHandler::move_object(mjData_*, int, luke::QPos) [97]
                0.00    0.00      21/21          luke::ObjectHandler::set_live(mjModel_*, int) [116]
-----------------------------------------------
                0.00    0.00      21/21          luke::ObjectHandler::spawn_object(mjModel_*, mjData_*, int, luke::QPos) [115]
[116]    0.0    0.00    0.00      21         luke::ObjectHandler::set_live(mjModel_*, int) [116]
                0.00    0.00      21/674669      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [46]
-----------------------------------------------
                0.00    0.00      21/21          reset_sim(MjClass&) [113]
[117]    0.0    0.00    0.00      21         MjClass::spawn_object(int) [117]
                0.00    0.00      21/21          MjClass::spawn_object(int, double, double) [118]
-----------------------------------------------
                0.00    0.00      21/21          MjClass::spawn_object(int) [117]
[118]    0.0    0.00    0.00      21         MjClass::spawn_object(int, double, double) [118]
                0.00    0.00      21/21          luke::spawn_object(mjModel_*, mjData_*, int, luke::QPos) [114]
                0.00    0.00      21/1545        luke::get_object_qpos(mjModel_*, mjData_*) [79]
-----------------------------------------------
                0.00    0.00      19/19          luke::ObjectHandler::reset_live(mjModel_*, mjData_*) [96]
[119]    0.0    0.00    0.00      19         luke::ObjectHandler::reset_object(mjModel_*, mjData_*, int) [119]
                0.00    0.00      19/40          luke::ObjectHandler::check_idx(int) [98]
                0.00    0.00      19/40          luke::ObjectHandler::move_object(mjData_*, int, luke::QPos) [97]
-----------------------------------------------
                0.00    0.00      19/19          MjClass::MjClass() [29]
[120]    0.0    0.00    0.00      19         std::vector<float, std::allocator<float> >::_M_default_append(unsigned long) [120]
                0.00    0.00      38/108188      decltype (__miter_base(({parm#1}.base)())) std::__miter_base<float*>(std::move_iterator<float*>) [55]
-----------------------------------------------
                0.00    0.00      16/16          luke::init_J(mjModel_*, mjData_*) [20]
[121]    0.0    0.00    0.00      16         std::vector<double*, std::allocator<double*> >::operator=(std::vector<double*, std::allocator<double*> > const&) [121]
                0.00    0.00      32/32          double* const* std::__niter_base<double* const*, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double* const*, std::vector<double*, std::allocator<double*> > >) [100]
                0.00    0.00      16/16          double** std::__niter_base<double**, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >) [124]
-----------------------------------------------
                0.00    0.00      16/16          luke::init_J(mjModel_*, mjData_*) [20]
[122]    0.0    0.00    0.00      16         std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [122]
                0.00    0.00      32/32          double const* std::__niter_base<double const*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >) [101]
                0.00    0.00      16/16          double* std::__niter_base<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [125]
-----------------------------------------------
                0.00    0.00      16/16          std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) [130]
[123]    0.0    0.00    0.00      16         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* std::__niter_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >) [123]
-----------------------------------------------
                0.00    0.00      16/16          std::vector<double*, std::allocator<double*> >::operator=(std::vector<double*, std::allocator<double*> > const&) [121]
[124]    0.0    0.00    0.00      16         double** std::__niter_base<double**, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >) [124]
-----------------------------------------------
                0.00    0.00      16/16          std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [122]
[125]    0.0    0.00    0.00      16         double* std::__niter_base<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >) [125]
-----------------------------------------------
                0.00    0.00      12/12          luke::configure_qpos(mjModel_*, mjData_*) [137]
[126]    0.0    0.00    0.00      12         std::vector<double*, std::allocator<double*> >::_M_default_append(unsigned long) [126]
                0.00    0.00      12/12          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double**>(std::move_iterator<double**>) [128]
-----------------------------------------------
                0.00    0.00      12/12          luke::configure_qpos(mjModel_*, mjData_*) [137]
[127]    0.0    0.00    0.00      12         std::vector<double, std::allocator<double> >::_M_default_append(unsigned long) [127]
                0.00    0.00      12/12          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double*>(std::move_iterator<double*>) [129]
-----------------------------------------------
                0.00    0.00      12/12          std::vector<double*, std::allocator<double*> >::_M_default_append(unsigned long) [126]
[128]    0.0    0.00    0.00      12         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double**>(std::move_iterator<double**>) [128]
-----------------------------------------------
                0.00    0.00      12/12          std::vector<double, std::allocator<double> >::_M_default_append(unsigned long) [127]
[129]    0.0    0.00    0.00      12         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double*>(std::move_iterator<double*>) [129]
-----------------------------------------------
                0.00    0.00       8/8           luke::init_J(mjModel_*, mjData_*) [20]
[130]    0.0    0.00    0.00       8         std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) [130]
                0.00    0.00      16/16          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* std::__niter_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >) [123]
                0.00    0.00       8/8           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__niter_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >) [132]
-----------------------------------------------
                0.00    0.00       8/8           luke::ObjectHandler::resize() [136]
[131]    0.0    0.00    0.00       8         std::vector<int, std::allocator<int> >::_M_default_append(unsigned long) [131]
                0.00    0.00       8/204         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>) [91]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) [130]
[132]    0.0    0.00    0.00       8         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__niter_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >) [132]
-----------------------------------------------
                0.00    0.00       4/4           luke::ObjectHandler::resize() [136]
[133]    0.0    0.00    0.00       4         std::vector<luke::QPos, std::allocator<luke::QPos> >::_M_default_append(unsigned long) [133]
-----------------------------------------------
                0.00    0.00       2/2           luke::ObjectHandler::init(mjModel_*, mjData_*) [22]
[134]    0.0    0.00    0.00       2         luke::ObjectHandler::settle_objects(mjModel_*, mjData_*) [134]
-----------------------------------------------
                0.00    0.00       2/2           luke::ObjectHandler::init(mjModel_*, mjData_*) [22]
[135]    0.0    0.00    0.00       2         luke::ObjectHandler::overwrite_keyframe(mjModel_*, mjData_*, int) [135]
-----------------------------------------------
                0.00    0.00       2/2           luke::ObjectHandler::init(mjModel_*, mjData_*) [22]
[136]    0.0    0.00    0.00       2         luke::ObjectHandler::resize() [136]
                0.00    0.00       8/8           std::vector<int, std::allocator<int> >::_M_default_append(unsigned long) [131]
                0.00    0.00       4/4           std::vector<luke::QPos, std::allocator<luke::QPos> >::_M_default_append(unsigned long) [133]
                0.00    0.00       2/2           std::vector<bool, std::allocator<bool> >::resize(unsigned long, bool) [140]
-----------------------------------------------
                0.00    0.00       2/2           luke::init_J(mjModel_*, mjData_*) [20]
[137]    0.0    0.00    0.00       2         luke::configure_qpos(mjModel_*, mjData_*) [137]
                0.00    0.00      12/12          std::vector<double, std::allocator<double> >::_M_default_append(unsigned long) [127]
                0.00    0.00      12/12          std::vector<double*, std::allocator<double*> >::_M_default_append(unsigned long) [126]
-----------------------------------------------
                0.00    0.00       2/2           luke::init_J(mjModel_*, mjData_*) [20]
[138]    0.0    0.00    0.00       2         luke::get_joint_addresses(mjModel_*) [138]
                0.00    0.00      22/37          void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [99]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<bool, std::allocator<bool> >::resize(unsigned long, bool) [140]
[139]    0.0    0.00    0.00       2         std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool) [139]
-----------------------------------------------
                0.00    0.00       2/2           luke::ObjectHandler::resize() [136]
[140]    0.0    0.00    0.00       2         std::vector<bool, std::allocator<bool> >::resize(unsigned long, bool) [140]
                0.00    0.00       2/2           std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool) [139]
-----------------------------------------------
                0.00    0.00       2/2           MjClass::load_relative(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [17]
[141]    0.0    0.00    0.00       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [141]
                0.00    0.00       2/674669      void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [46]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [27]
[142]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4luke13ObjectHandlerC2Ev [142]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [150]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [27]
[143]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4luke7Gripper9update_xyEv [143]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [151]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [27]
[144]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN6render1mE [144]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [149]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [27]
[145]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7MjClassC2Ev [145]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [148]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [27]
[146]    0.0    0.00    0.00       1         _GLOBAL__sub_I_num_xml_tasks [146]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [147]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_num_xml_tasks [146]
[147]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [147]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7MjClassC2Ev [145]
[148]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [148]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6render1mE [144]
[149]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [149]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4luke13ObjectHandlerC2Ev [142]
[150]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [150]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4luke7Gripper9update_xyEv [143]
[151]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [151]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [25]
[152]    0.0    0.00    0.00       1         luke::ObjectHandler::ObjectHandler() [152]
-----------------------------------------------
                0.00    0.00       1/1           run_test(int, int, int) [2]
[153]    0.0    0.00    0.00       1         MjClass::tick() [153]
-----------------------------------------------
                0.00    0.00       1/1           run_test(int, int, int) [2]
[154]    0.0    0.00    0.00       1         MjClass::tock() [154]
-----------------------------------------------
                0.00    0.00       1/1           run_test(int, int, int) [2]
[155]    0.0    0.00    0.00       1         MjClass::~MjClass() [155]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [142] _GLOBAL__sub_I__ZN4luke13ObjectHandlerC2Ev (objecthandler.cpp) [98] luke::ObjectHandler::check_idx(int) [153] MjClass::tick()
 [143] _GLOBAL__sub_I__ZN4luke7Gripper9update_xyEv (gripper.cpp) [152] luke::ObjectHandler::ObjectHandler() [154] MjClass::tock()
  [24] _GLOBAL__sub_I__ZN4luke9print_vecESt6vectorIbSaIbEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE (myfunctions.cpp) [137] luke::configure_qpos(mjModel_*, mjData_*) [111] MjClass::reset()
 [144] _GLOBAL__sub_I__ZN6render1mE (rendering.cpp) [74] luke::get_gauge_data(mjModel_ const*, mjData_*) [86] MjClass::reward()
 [145] _GLOBAL__sub_I__ZN7MjClassC2Ev (mjclass.cpp) [52] luke::is_target_step() [87] MjClass::is_done()
 [146] _GLOBAL__sub_I_num_xml_tasks (test.cpp) [48] luke::update_stepper(mjModel_ const*, mjData_*) [29] MjClass::MjClass()
  [81] calc_rewards(MjType::EventTrack&, MjType::Settings&) [12] luke::control_gripper(mjModel_ const*, mjData_*, luke::Gripper&) [155] MjClass::~MjClass()
   [3] learning_step(MjClass&) [79] luke::get_object_qpos(mjModel_*, mjData_*) [93] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...)
  [77] linear_reward(float, float, float, float) [75] luke::get_target_state() [133] std::vector<luke::QPos, std::allocator<luke::QPos> >::_M_default_append(unsigned long)
  [82] update_events(MjType::EventTrack&, MjType::Settings&) [21] luke::get_joint_indexes(mjModel_*) [92] void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  [73] normalise_between(float, float, float) [53] luke::is_target_reached() [130] std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
 [147] __static_initialization_and_destruction_0(int, int) (test.cpp) [83] luke::get_gripper_target() [126] std::vector<double*, std::allocator<double*> >::_M_default_append(unsigned long)
 [148] __static_initialization_and_destruction_0(int, int) (mjclass.cpp) [90] luke::move_base_target_m(double, double, double) [121] std::vector<double*, std::allocator<double*> >::operator=(std::vector<double*, std::allocator<double*> > const&)
 [149] __static_initialization_and_destruction_0(int, int) (rendering.cpp) [138] luke::get_joint_addresses(mjModel_*) [139] std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool)
 [150] __static_initialization_and_destruction_0(int, int) (objecthandler.cpp) [68] luke::read_armadillo_gauge(mjData_ const*, int) [140] std::vector<bool, std::allocator<bool> >::resize(unsigned long, bool)
  [25] __static_initialization_and_destruction_0(int, int) (myfunctions.cpp) [8] luke::get_object_forces_faster(mjModel_ const*, mjData_*) [127] std::vector<double, std::allocator<double> >::_M_default_append(unsigned long)
 [151] __static_initialization_and_destruction_0(int, int) (gripper.cpp) [88] luke::move_gripper_target_step(int, int, int) [122] std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&)
   [2] run_test(int, int, int) [16] luke::init(mjModel_*, mjData_*) [89] std::vector<float, std::allocator<float> >::_M_fill_assign(unsigned long, float const&)
 [113] reset_sim(MjClass&)    [13] luke::step(mjModel_*, mjData_*) [63] void std::vector<float, std::allocator<float> >::_M_range_insert<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, std::forward_iterator_tag)
  [66] bool arma::glue_polyfit::apply_direct<arma::subview<double>, arma::subview<double> >(arma::Mat<arma::subview<double>::elem_type>&, arma::Base<arma::subview<double>::elem_type, arma::subview<double> > const&, arma::Base<arma::subview<double>::elem_type, arma::subview<double> > const&, unsigned long long) [108] luke::reset(mjModel_*, mjData_*) [120] std::vector<float, std::allocator<float> >::_M_default_append(unsigned long)
  [67] bool arma::glue_polyfit::apply_noalias<double>(arma::Mat<double>&, arma::Col<double> const&, arma::Col<double> const&, unsigned long long) [20] luke::init_J(mjModel_*, mjData_*) [70] void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
  [62] arma::Mat<double>::init_warm(unsigned long long, unsigned long long) [54] luke::rawNum::rawNum(luke::rawNum const&) [64] __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > > std::vector<float, std::allocator<float> >::insert<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, void>(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, __gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >)
  [49] luke::after_step(mjModel_*, mjData_*) [94] luke::Gripper::update() [65] std::vector<float, std::allocator<float> >::vector(std::vector<float, std::allocator<float> > const&)
  [15] luke::is_settled()     [58] luke::Gripper::step_to(luke::Gripper, int) [112] std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)
  [47] luke::update_all(mjModel_ const*, mjData_*) [59] luke::Gripper::step_to(double, double, double, int) [131] std::vector<int, std::allocator<int> >::_M_default_append(unsigned long)
  [50] luke::before_step(mjModel_*, mjData_*) [56] luke::Gripper::update_z() [99] void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
 [106] luke::get_objects[abi:cxx11]() [57] luke::Gripper::update_xy() [102] std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&)
  [51] luke::control_base(mjModel_ const*, mjData_*) [14] luke::control(mjModel_ const*, mjData_*) [10] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
 [107] luke::reset_object(mjModel_*, mjData_*) [104] luke::keyframe(mjModel_*, mjData_*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [46] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
 [114] luke::spawn_object(mjModel_*, mjData_*, int, luke::QPos) [105] luke::keyframe(mjModel_*, mjData_*, int) [128] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double**>(std::move_iterator<double**>)
  [26] luke::JointSettings::JointSettings() [72] MjType::Sensor::raw_sample(luke::SlidingWindow<float>, float) [129] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double*>(std::move_iterator<double*>)
  [28] luke::JointSettings::{unnamed type#1}::JointSettings() [69] MjType::Sensor::change_sample(luke::SlidingWindow<float>, float) [55] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<float*>(std::move_iterator<float*>)
  [96] luke::ObjectHandler::reset_live(mjModel_*, mjData_*) [84] MjClass::set_action(int) [91] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<int*>(std::move_iterator<int*>)
  [97] luke::ObjectHandler::move_object(mjData_*, int, luke::QPos) [11] MjClass::update_env() [123] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* std::__niter_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >)
 [119] luke::ObjectHandler::reset_object(mjModel_*, mjData_*, int) [4] MjClass::action_step() [100] double* const* std::__niter_base<double* const*, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double* const*, std::vector<double*, std::allocator<double*> > >)
 [115] luke::ObjectHandler::spawn_object(mjModel_*, mjData_*, int, luke::QPos) [117] MjClass::spawn_object(int) [101] double const* std::__niter_base<double const*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >)
  [78] luke::ObjectHandler::get_live_qpos(mjModel_*, mjData_*) [118] MjClass::spawn_object(int, double, double) [61] float const* std::__niter_base<float const*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::allocator<float> > >)
 [134] luke::ObjectHandler::settle_objects(mjModel_*, mjData_*) [17] MjClass::load_relative(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [95] int const* std::__niter_base<int const*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
  [23] luke::ObjectHandler::remove_collisions(mjModel_*, mjData_*) [80] MjClass::get_observation() [132] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__niter_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >)
 [135] luke::ObjectHandler::overwrite_keyframe(mjModel_*, mjData_*, int) [6] MjClass::monitor_sensors() [124] double** std::__niter_base<double**, std::vector<double*, std::allocator<double*> > >(__gnu_cxx::__normal_iterator<double**, std::vector<double*, std::allocator<double*> > >)
   [7] luke::ObjectHandler::extract_forces_faster(mjModel_ const*, mjData_*) [109] MjClass::configure_settings() [125] double* std::__niter_base<double*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >)
  [71] luke::ObjectHandler::get_object_net_force_faster(mjModel_ const*, mjData_*) [85] MjClass::sense_gripper_state() [60] float* std::__niter_base<float*, std::vector<float, std::allocator<float> > >(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >)
  [22] luke::ObjectHandler::init(mjModel_*, mjData_*) [110] MjClass::default_goal_event_triggering() [103] int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [136] luke::ObjectHandler::resize() [18] MjClass::init() [76] double const* std::__min_element<double const*, __gnu_cxx::__ops::_Iter_less_iter>(double const*, double const*, __gnu_cxx::__ops::_Iter_less_iter)
   [9] luke::ObjectHandler::Contact::check_involves(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [19] MjClass::load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [141] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [116] luke::ObjectHandler::set_live(mjModel_*, int) [5] MjClass::step()
