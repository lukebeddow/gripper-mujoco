Hyperparameters at training time:

    network_name = DQN_3L60
    batch_size = 128
    gamma = 0.999
    eps_start = 0.9
    eps_end = 0.05
    eps_decay = 250
    target_update = 100
    num_episodes = 10000
    max_episode_steps = 100
    memory_replay = 10000
    test_freq = 1000
    save_freq = 1000
    
c++ current simulation settings:

Type          Name                     Value/s
bool          debug                    { 0 }
double        gauge_read_rate_hz       { 10.000000 }
double        lift_distance            { 0.001000 }
double        oob_distance             { 0.075000 }
double        height_target            { 0.025000 }
double        stable_finger_force      { 1.000000 }
double        stable_palm_force        { 2.000000 }
int           max_timeouts             { 10 }
int           action_motor_steps       { 100 }
double        action_base_translation  { 0.002000 }
int           max_action_steps         { 200 }
bool          paired_motor_X_step      { 1 }
bool          use_palm_action          { 1 }
bool          use_height_action        { 1 }
bool          render_on_step           { 0 }
bool          use_settling             { 0 }
bool          use_render_delay         { 0 }
double        render_delay             { 0.500000 }
BinaryReward  step_num                 { -0.010000, 0,    1 }
BinaryReward  lifted                   { 0.005000,  0,    1 }
BinaryReward  oob                      { 0.000000,  1,    1 }
BinaryReward  dropped                  { 0.000000,  0,    1000 }
BinaryReward  target_height            { 1.000000,  0,    1000 }
BinaryReward  exceed_limits            { -0.100000, 0,    1 }
BinaryReward  object_contact           { 0.005000,  0,    1 }
BinaryReward  object_stable            { 1.000000,  1,    1 }
LinearReward  exceed_axial             { -0.010000, 0,    1,    2.000000,  6.000000,  -1.000000,  }
LinearReward  exceed_lateral           { -0.050000, 0,    1,    4.000000,  6.000000,  -1.000000,  }
LinearReward  palm_force               { 0.050000,  0,    1,    1.000000,  3.000000,  6.000000,  }
LinearReward  exceed_palm              { -0.050000, 0,    1,    6.000000,  10.000000, -1.000000,  }
